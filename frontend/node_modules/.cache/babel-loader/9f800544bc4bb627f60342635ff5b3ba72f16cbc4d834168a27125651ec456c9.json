{"ast":null,"code":"var _jsxFileName = \"F:\\\\Remainder_ai\\\\frontend\\\\src\\\\index.js\";\nimport React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { GoogleOAuthProvider } from '@react-oauth/google';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst container = document.getElementById('root');\nconst root = createRoot(container);\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID || '';\nif (!clientId) {\n  // eslint-disable-next-line no-console\n  console.warn('REACT_APP_GOOGLE_CLIENT_ID is not set. Google Login will not function until it is configured.');\n}\nroot.render(/*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n  clientId: clientId,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this));\n\n// register service worker to receive push when possible\nserviceWorkerRegistration.register();","map":{"version":3,"names":["React","createRoot","GoogleOAuthProvider","App","serviceWorkerRegistration","jsxDEV","_jsxDEV","container","document","getElementById","root","clientId","process","env","REACT_APP_GOOGLE_CLIENT_ID","console","warn","render","children","fileName","_jsxFileName","lineNumber","columnNumber","register"],"sources":["F:/Remainder_ai/frontend/src/index.js"],"sourcesContent":["import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { GoogleOAuthProvider } from '@react-oauth/google';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID || '';\nif (!clientId) {\n  // eslint-disable-next-line no-console\n  console.warn('REACT_APP_GOOGLE_CLIENT_ID is not set. Google Login will not function until it is configured.');\n}\n\nroot.render(\n  <GoogleOAuthProvider clientId={clientId}>\n    <App />\n  </GoogleOAuthProvider>\n);\n\n// register service worker to receive push when possible\nserviceWorkerRegistration.register();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,KAAKC,yBAAyB,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AACjD,MAAMC,IAAI,GAAGT,UAAU,CAACM,SAAS,CAAC;AAElC,MAAMI,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,0BAA0B,IAAI,EAAE;AAC7D,IAAI,CAACH,QAAQ,EAAE;EACb;EACAI,OAAO,CAACC,IAAI,CAAC,+FAA+F,CAAC;AAC/G;AAEAN,IAAI,CAACO,MAAM,cACTX,OAAA,CAACJ,mBAAmB;EAACS,QAAQ,EAAEA,QAAS;EAAAO,QAAA,eACtCZ,OAAA,CAACH,GAAG;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACY,CACvB,CAAC;;AAED;AACAlB,yBAAyB,CAACmB,QAAQ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}