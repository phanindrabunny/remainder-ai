{"ast":null,"code":"var _jsxFileName = \"F:\\\\Remainder_ai\\\\frontend\\\\src\\\\components\\\\EmailAuth.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmailAuth({\n  onAuthComplete\n}) {\n  _s();\n  const [error, setError] = useState('');\n  const handleGoogleSuccess = async credentialResponse => {\n    try {\n      const decodedToken = jwtDecode(credentialResponse.credential);\n      const email = decodedToken.email;\n\n      // Verify it's a Gmail account\n      if (!email.endsWith('@gmail.com')) {\n        setError('Please use a Gmail account for authentication.');\n        return;\n      }\n\n      // Store the email and credentials\n      localStorage.setItem('senderEmail', email);\n      localStorage.setItem('googleCredential', credentialResponse.credential);\n      onAuthComplete({\n        email\n      });\n    } catch (err) {\n      console.error('Google auth error:', err);\n      setError('Failed to authenticate with Google. Please try again.');\n    }\n  };\n  const handleGoogleError = () => {\n    setError('Google Sign-In failed. Please try again.');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign in with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-description\",\n        children: \"To enable email notifications, please sign in with your Gmail account. This will allow us to send reminder emails on your behalf.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"google-auth-container\",\n        children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onSuccess: handleGoogleSuccess,\n          onError: handleGoogleError,\n          shape: \"pill\",\n          theme: \"filled_blue\",\n          text: \"signin_with\",\n          useOneTap: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-info\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"help-text\",\n          children: \"We only use your Gmail account to send reminder notifications. Your credentials are securely stored and can be revoked at any time.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(EmailAuth, \"/PuDV6TKqxF+sNNiHmyv2C3jNxE=\");\n_c = EmailAuth;\nvar _c;\n$RefreshReg$(_c, \"EmailAuth\");","map":{"version":3,"names":["React","useState","GoogleLogin","jwtDecode","jsxDEV","_jsxDEV","EmailAuth","onAuthComplete","_s","error","setError","handleGoogleSuccess","credentialResponse","decodedToken","credential","email","endsWith","localStorage","setItem","err","console","handleGoogleError","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","shape","theme","text","useOneTap","_c","$RefreshReg$"],"sources":["F:/Remainder_ai/frontend/src/components/EmailAuth.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport { jwtDecode } from \"jwt-decode\"; \r\n\r\nexport default function EmailAuth({ onAuthComplete }) {\r\n  const [error, setError] = useState('');\r\n\r\n  const handleGoogleSuccess = async (credentialResponse) => {\r\n    try {\r\n      const decodedToken = jwtDecode(credentialResponse.credential);\r\n      const email = decodedToken.email;\r\n      \r\n      // Verify it's a Gmail account\r\n      if (!email.endsWith('@gmail.com')) {\r\n        setError('Please use a Gmail account for authentication.');\r\n        return;\r\n      }\r\n\r\n      // Store the email and credentials\r\n      localStorage.setItem('senderEmail', email);\r\n      localStorage.setItem('googleCredential', credentialResponse.credential);\r\n      \r\n      onAuthComplete({ email });\r\n    } catch (err) {\r\n      console.error('Google auth error:', err);\r\n      setError('Failed to authenticate with Google. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleGoogleError = () => {\r\n    setError('Google Sign-In failed. Please try again.');\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2>Sign in with Google</h2>\r\n        <p className=\"auth-description\">\r\n          To enable email notifications, please sign in with your Gmail account.\r\n          This will allow us to send reminder emails on your behalf.\r\n        </p>\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        \r\n        <div className=\"google-auth-container\">\r\n          <GoogleLogin\r\n            onSuccess={handleGoogleSuccess}\r\n            onError={handleGoogleError}\r\n            shape=\"pill\"\r\n            theme=\"filled_blue\"\r\n            text=\"signin_with\"\r\n            useOneTap={true}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"auth-info\">\r\n          <p className=\"help-text\">\r\n            We only use your Gmail account to send reminder notifications.\r\n            Your credentials are securely stored and can be revoked at any time.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}