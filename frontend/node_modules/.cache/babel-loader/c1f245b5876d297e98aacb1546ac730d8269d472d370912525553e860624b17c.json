{"ast":null,"code":"import React,{useState}from'react';import{createReminder}from'../api';import{subscribeUser}from'../push';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function ReminderForm(_ref){let{onSaved,senderEmail,receiverEmail}=_ref;const[title,setTitle]=useState('');const[details,setDetails]=useState('');const[dateTime,setDateTime]=useState('');const[channels,setChannels]=useState(['browser']);const toggleChannel=ch=>{setChannels(prev=>prev.includes(ch)?prev.filter(x=>x!==ch):[...prev,ch]);};const submit=async e=>{e.preventDefault();if(!title||!dateTime||!channels.length)return alert('Please fill required fields');const payload={userEmail:receiverEmail,senderEmail:senderEmail,title,details,dateTime:new Date(dateTime).toISOString(),channels,repeat:'none'};try{await createReminder(payload);// if browser push included, request permission and subscribe\nif(channels.includes('browser')){if(Notification.permission!=='granted'){await Notification.requestPermission();}if(Notification.permission==='granted'){await subscribeUser(receiverEmail);}}setTitle('');setDetails('');setDateTime('');onSaved&&onSaved();}catch(err){console.error(err);alert('Save failed');}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:submit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Title*\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:title,onChange:e=>setTitle(e.target.value),required:true,placeholder:\"Enter reminder title\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Details\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:details,onChange:e=>setDetails(e.target.value),placeholder:\"Enter reminder details\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Date & Time*\"}),/*#__PURE__*/_jsx(\"input\",{type:\"datetime-local\",value:dateTime,onChange:e=>setDateTime(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Channels\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"channels-group\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"channel-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:channels.includes('browser'),onChange:()=>toggleChannel('browser')}),/*#__PURE__*/_jsx(\"span\",{children:\"Browser\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"channel-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:channels.includes('email'),onChange:()=>toggleChannel('email')}),/*#__PURE__*/_jsx(\"span\",{children:\"Email\"})]})]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Save Reminder\"})]});}","map":{"version":3,"names":["React","useState","createReminder","subscribeUser","jsx","_jsx","jsxs","_jsxs","ReminderForm","_ref","onSaved","senderEmail","receiverEmail","title","setTitle","details","setDetails","dateTime","setDateTime","channels","setChannels","toggleChannel","ch","prev","includes","filter","x","submit","e","preventDefault","length","alert","payload","userEmail","Date","toISOString","repeat","Notification","permission","requestPermission","err","console","error","onSubmit","children","className","type","value","onChange","target","required","placeholder","checked"],"sources":["F:/Remainder_ai/frontend/src/components/ReminderForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { createReminder } from '../api';\r\nimport { subscribeUser } from '../push';\r\n\r\nexport default function ReminderForm({ onSaved, senderEmail, receiverEmail }) {\r\n  const [title, setTitle] = useState('');\r\n  const [details, setDetails] = useState('');\r\n  const [dateTime, setDateTime] = useState('');\r\n  const [channels, setChannels] = useState(['browser']);\r\n\r\n  const toggleChannel = (ch) => {\r\n    setChannels(prev => prev.includes(ch) ? prev.filter(x => x !== ch) : [...prev, ch]);\r\n  };\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    if (!title || !dateTime || (!channels.length)) return alert('Please fill required fields');\r\n\r\n    const payload = {\r\n      userEmail: receiverEmail,\r\n      senderEmail: senderEmail,\r\n      title,\r\n      details,\r\n      dateTime: new Date(dateTime).toISOString(),\r\n      channels,\r\n      repeat: 'none'\r\n    };\r\n\r\n    try {\r\n      await createReminder(payload);\r\n      // if browser push included, request permission and subscribe\r\n      if (channels.includes('browser')) {\r\n        if (Notification.permission !== 'granted') {\r\n          await Notification.requestPermission();\r\n        }\r\n        if (Notification.permission === 'granted') {\r\n          await subscribeUser(receiverEmail);\r\n        }\r\n      }\r\n      setTitle(''); setDetails(''); setDateTime('');\r\n      onSaved && onSaved();\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Save failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submit}>\r\n      <div className=\"form-group\">\r\n        <label>Title*</label>\r\n        <input \r\n          type=\"text\"\r\n          value={title} \r\n          onChange={e=>setTitle(e.target.value)} \r\n          required \r\n          placeholder=\"Enter reminder title\"\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Details</label>\r\n        <input \r\n          type=\"text\"\r\n          value={details} \r\n          onChange={e=>setDetails(e.target.value)}\r\n          placeholder=\"Enter reminder details\"\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Date & Time*</label>\r\n        <input \r\n          type=\"datetime-local\" \r\n          value={dateTime} \r\n          onChange={e=>setDateTime(e.target.value)} \r\n          required \r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Channels</label>\r\n        <div className=\"channels-group\">\r\n          <div className=\"channel-option\">\r\n            <input \r\n              type=\"checkbox\" \r\n              checked={channels.includes('browser')} \r\n              onChange={()=>toggleChannel('browser')}\r\n            />\r\n            <span>Browser</span>\r\n          </div>\r\n          <div className=\"channel-option\">\r\n            <input \r\n              type=\"checkbox\" \r\n              checked={channels.includes('email')} \r\n              onChange={()=>toggleChannel('email')}\r\n            />\r\n            <span>Email</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button type=\"submit\">Save Reminder</button>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}