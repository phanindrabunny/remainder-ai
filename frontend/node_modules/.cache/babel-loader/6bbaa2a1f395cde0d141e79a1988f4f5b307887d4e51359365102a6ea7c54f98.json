{"ast":null,"code":"import{saveSubscription}from'./api';const PUBLIC_VAPID_KEY=process.env.REACT_APP_VAPID_PUBLIC;// set in .env\nfunction urlBase64ToUint8Array(base64String){const padding='='.repeat((4-base64String.length%4)%4);const base64=(base64String+padding).replace(/-/g,'+').replace(/_/g,'/');// ✅ removed unnecessary escape\nconst rawData=window.atob(base64);const outputArray=new Uint8Array(rawData.length);for(let i=0;i<rawData.length;++i){outputArray[i]=rawData.charCodeAt(i);}return outputArray;}export async function subscribeUser(userEmail){if(!('serviceWorker'in navigator)||!('PushManager'in window))return null;try{const registration=await navigator.serviceWorker.ready;const subscription=await registration.pushManager.subscribe({userVisibleOnly:true,applicationServerKey:urlBase64ToUint8Array(PUBLIC_VAPID_KEY)});// send subscription to backend\nawait saveSubscription(subscription,userEmail);return subscription;}catch(err){console.error('Subscription failed',err);return null;}}","map":{"version":3,"names":["saveSubscription","PUBLIC_VAPID_KEY","process","env","REACT_APP_VAPID_PUBLIC","urlBase64ToUint8Array","base64String","padding","repeat","length","base64","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","subscribeUser","userEmail","navigator","registration","serviceWorker","ready","subscription","pushManager","subscribe","userVisibleOnly","applicationServerKey","err","console","error"],"sources":["F:/Remainder_ai/frontend/src/push.js"],"sourcesContent":["import { saveSubscription } from './api';\r\n\r\nconst PUBLIC_VAPID_KEY = process.env.REACT_APP_VAPID_PUBLIC; // set in .env\r\n\r\nfunction urlBase64ToUint8Array(base64String) {\r\n  const padding = '='.repeat((4 - base64String.length % 4) % 4);\r\n  const base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/'); // ✅ removed unnecessary escape\r\n  const rawData = window.atob(base64);\r\n  const outputArray = new Uint8Array(rawData.length);\r\n  for (let i = 0; i < rawData.length; ++i) {\r\n    outputArray[i] = rawData.charCodeAt(i);\r\n  }\r\n  return outputArray;\r\n}\r\n\r\nexport async function subscribeUser(userEmail) {\r\n  if (!('serviceWorker' in navigator) || !('PushManager' in window)) return null;\r\n\r\n  try {\r\n    const registration = await navigator.serviceWorker.ready;\r\n    const subscription = await registration.pushManager.subscribe({\r\n      userVisibleOnly: true,\r\n      applicationServerKey: urlBase64ToUint8Array(PUBLIC_VAPID_KEY)\r\n    });\r\n\r\n    // send subscription to backend\r\n    await saveSubscription(subscription, userEmail);\r\n    return subscription;\r\n  } catch (err) {\r\n    console.error('Subscription failed', err);\r\n    return null;\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAASA,gBAAgB,KAAQ,OAAO,CAExC,KAAM,CAAAC,gBAAgB,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,CAAE;AAE7D,QAAS,CAAAC,qBAAqBA,CAACC,YAAY,CAAE,CAC3C,KAAM,CAAAC,OAAO,CAAG,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,CAAGF,YAAY,CAACG,MAAM,CAAG,CAAC,EAAI,CAAC,CAAC,CAC7D,KAAM,CAAAC,MAAM,CAAG,CAACJ,YAAY,CAAGC,OAAO,EAAEI,OAAO,CAAC,IAAI,CAAE,GAAG,CAAC,CAACA,OAAO,CAAC,IAAI,CAAE,GAAG,CAAC,CAAE;AAC/E,KAAM,CAAAC,OAAO,CAAGC,MAAM,CAACC,IAAI,CAACJ,MAAM,CAAC,CACnC,KAAM,CAAAK,WAAW,CAAG,GAAI,CAAAC,UAAU,CAACJ,OAAO,CAACH,MAAM,CAAC,CAClD,IAAK,GAAI,CAAAQ,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGL,OAAO,CAACH,MAAM,CAAE,EAAEQ,CAAC,CAAE,CACvCF,WAAW,CAACE,CAAC,CAAC,CAAGL,OAAO,CAACM,UAAU,CAACD,CAAC,CAAC,CACxC,CACA,MAAO,CAAAF,WAAW,CACpB,CAEA,MAAO,eAAe,CAAAI,aAAaA,CAACC,SAAS,CAAE,CAC7C,GAAI,EAAE,eAAe,EAAI,CAAAC,SAAS,CAAC,EAAI,EAAE,aAAa,EAAI,CAAAR,MAAM,CAAC,CAAE,MAAO,KAAI,CAE9E,GAAI,CACF,KAAM,CAAAS,YAAY,CAAG,KAAM,CAAAD,SAAS,CAACE,aAAa,CAACC,KAAK,CACxD,KAAM,CAAAC,YAAY,CAAG,KAAM,CAAAH,YAAY,CAACI,WAAW,CAACC,SAAS,CAAC,CAC5DC,eAAe,CAAE,IAAI,CACrBC,oBAAoB,CAAExB,qBAAqB,CAACJ,gBAAgB,CAC9D,CAAC,CAAC,CAEF;AACA,KAAM,CAAAD,gBAAgB,CAACyB,YAAY,CAAEL,SAAS,CAAC,CAC/C,MAAO,CAAAK,YAAY,CACrB,CAAE,MAAOK,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAAC,qBAAqB,CAAEF,GAAG,CAAC,CACzC,MAAO,KAAI,CACb,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}